@model CartViewModel

@{
    ViewData["Title"] = "Cart";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <!-- head contents (omitted for brevity) -->
    <link rel="stylesheet" href="~/css/site.css" />
    <link href="https://fonts.googleapis.com/css2?family=Bungee&display=swap" rel="stylesheet">
</head>

<body>

<style>
    .background-square {
        background-color: #f3f2f6;
        padding: 20px;
        margin-bottom: 20px;
    }
</style>

<div class="container">
    <div class="row">
            <h2>Your Cart</h2>
        <div class="col-8 background-square">
            @if (Model.CartItems.Count == 0)
            {
                <p>Your cart is empty.</p>
            }
            else
            {
                <table class="table">
                    <thead>
                    <tr>
                        <th>Item</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                    </tr>
                    </thead>
                    <tbody>
                            @foreach (var item in Model.CartItems)
                    {
                        <tr>
                            <td>@item.ItemName</td>
                            <td>$@item.ItemPrice</td>
                            <td>@item.Quantity</td>
                            <td class="item-total">$@(item.ItemPrice * item.Quantity)</td>
                            <td>
                                <button type="submit" class="btn btn-sm btn-danger remove-from-cart-btn" data-item-id="@item.ProductId">Remove</button>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
                <h3>Total: $@Model.TotalPrice</h3>
            }
        </div>
            <div class="col-4 background-square">
                <div class="totals">
                    <h3>Cart totals</h3>

                    <div class="subtotal">
                        <strong>Subtotal</strong>
                        <span id="subtotal">$@Model.TotalPrice</span>
                    </div>

                    <div class="shipping">
                        <strong>Shipping</strong>
                        <div>
                            <input type="radio" id="free" name="shipping" value="0" checked>
                            <label for="free">Free shipping</label><br>
                            <input type="radio" id="flat" name="shipping" value="10">
                            <label for="flat">Flat rate: $10.00</label><br>
                            <input type="radio" id="pickup" name="shipping" value="15">
                            <label for="pickup">Pickup: $15.00</label>
                        </div>

                    </div>
                    <div class="total ">
                        <strong>Total</strong>
                        <span id="total">$@Model.TotalPrice</span>
                    </div>
                </div>
        </div>
            <style>
                .link-button {
                    display: inline-block;
                    padding: 10px 20px;
                    margin: 5px;
                    font-size: 16px;
                    cursor: pointer;
                    text-align: center;
                    text-decoration: none;
                    color: white;
                    background-color: #0C938F;
                    border: none;
                    border-radius: 5px;
                    transition: background-color 0.3s;
                }

                .link-button:hover {
                        background-color: #0eb0ab;
                }

            </style>


<div class="row">
    <div class="col">
        <a class="link-button" asp-area="" asp-controller="Home" asp-action="Products">Continue Shopping</a>
    </div>
    <div class="col">
        <!-- Change this link to a form to submit the total -->
        <form asp-action="CheckoutForm" asp-controller="Home" method="post">
            <input type="hidden" name="totalAmount" id="totalAmount" value="@Model.TotalPrice" />
            <button type="button" class="link-button" onclick="proceedToCheckout()">Proceed to Checkout</button>
        </form>
    </div>
</div>

    </div>
</div>

    <script>
        // function updateTotal() {
        //     var subtotalElement = document.getElementById('subtotal');
        //     var subtotal = parseFloat(subtotalElement.textContent.replace('$', ''));
        //     var shippingCost = parseFloat(document.querySelector('input[name="shipping"]:checked').value);
        //     var total = subtotal + shippingCost;
        //     var totalElement = document.getElementById('total');
        //     totalElement.textContent = '$' + total.toFixed(2);
        // }

        // document.querySelectorAll('input[name="shipping"]').forEach(function (radio) {
        //     radio.addEventListener('change', updateTotal);
        // });

        // updateTotal();
        function updateTotal() {
            var subtotal = 0;
            document.querySelectorAll('.item-total').forEach(item => {
                subtotal += parseFloat(item.textContent.replace('$', ''));
            });
            var subtotalElement = document.getElementById('subtotal');
            subtotalElement.textContent = '$' + subtotal.toFixed(2);
        
            var shippingCost = parseFloat(document.querySelector('input[name="shipping"]:checked').value);
            var total = subtotal + shippingCost;
            var totalElement = document.getElementById('total');
            totalElement.textContent = '$' + total.toFixed(2);
        
            // Update the hidden input for the total amount
            document.getElementById('totalAmount').value = total.toFixed(2);
        }
    </script>
<script>
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.remove-from-cart-btn').forEach(button => {
                button.addEventListener('click', function (e) {
                    e.preventDefault();
                    const button = this;
                    const itemId = this.getAttribute('data-item-id');
                    fetch(`/Home/RemoveProduct?productId=${itemId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ productId: itemId })
                    })
                        .then(response => {
                            if (response.ok) {
                                return response.json();
                            }
                            throw new Error('Something went wrong on the server!');
                        })
                        .then(data => {
                            // Remove the row from the table
                            button.closest('tr').remove();
                            // Update cart item count in the top right corner
                            document.getElementById('cart-quantity').innerText = data.cartItemCount;
                            // Call updateTotal() here after the item is removed and cart item count is updated
                            updateTotal();
                        })
                        .catch(error => console.error('Error removing item:', error));
                });
            });
        });


    </script>
    <script>
        function proceedToCheckout() {
            var totalAmount = document.getElementById('totalAmount').value;
            window.location.href = `/Home/CheckoutForm?totalAmount=${totalAmount}`;
        }

    </script>
</body>

</html>