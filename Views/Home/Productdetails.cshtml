@{
    ViewData["Title"] = "Product Details";
}


@model Product // Assuming your product model is called 'Product'

<!-- Display product details -->
<body>
<div class="product-detail-container">
    <h2>@Model.Name</h2>
    <img class="card-img-top" src="@Model.ImgLink" alt="Product Image" style="max-width: 400px; height: auto;"/>
    <p>Price: $@Model.Price</p>
    <p>Description: @Model.Description</p>
    <!-- Add more product details as needed -->
    <!-- Product actions-->
    <div class="card-footer p-4 pt-0 border-top-0 bg-transparent">
        <div class="text-center">
            <button class="btn btn-outline-dark mt-auto add-to-cart-btn" data-item-id="@Model.ProductId">Add to cart</button>
        </div>
    </div>

</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.add-to-cart-btn').forEach(button => {
            button.addEventListener('click', function (e) {
                e.preventDefault();
                const itemId = this.getAttribute('data-item-id');
                fetch(`/Home/AddToCart?productID=${itemId}`, { method: 'POST' })
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('cart-quantity').innerText = data.cartItemCount;
                    })
                    .catch(error => console.error('Error adding item:', error));

            });
        });
    });
</script>
    <div class="recommendations-section text-center mt-4">
        <h2 class="display-6 fw-bold">Recommendations for You</h2>
        <p class="lead">Check out these hand-picked items we think you'll love!</p>
        <!-- Here you would insert product recommendations -->
    </div>
</body>