@using IntexBrickwell.Utilities
@model HomePageViewModel

@{
    ViewData["Title"] = "Home";
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>Shop Homepage - Start Bootstrap Template</title>
    <!-- Favicon-->
    <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />
    <!-- Bootstrap icons-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" rel="stylesheet" />
    <!-- Core theme CSS (includes Bootstrap)-->
    <link href="css/site.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Bungee&display=swap" rel="stylesheet">

</head>

<body>
    <style>
        .btn-primary {
            background-color: #ffcf00; /* Lego yellow */
            border-color: #ffcf00;
        }

            .btn-primary:hover {
                background-color: #e5b900;
                border-color: #e5b900;
            }

        .btn-outline-dark {
            border-color: #333;
            color: #333;
        }

            .btn-outline-dark:hover {
                background-color: #333;
                color: #fff;
            }

        .pagination .btn-secondary.disabled {
            color: #fff;
            background-color: #6c757d;
            border-color: #6c757d;
        }

        .pagination .btn {
            margin: 0 5px;
        }

    </style>


<header style="padding-top: 40px; padding-bottom: 40px; background-color: transparent; text-align: center;">
    <div class="container">
        <h1 style="font-family: 'Bungee', cursive; font-size: 72px; color: #333; font-weight: bold; margin-bottom: 10px;">
            Welcome to Brickwell Legos!
        </h1>
        <p style="font-size: 32px; font-weight: bold; color: #555; margin: 0;">
            Find your favorite Lego sets here. Let the building begin!
        </p>
    </div>
</header>
    <!-- Section for displaying items -->
    <section class="py-5">
        <h2 style="font-family: 'Bungee', cursive;">Featured Sets</h2>
        <div class="row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-4 justify-content-center">
            @foreach (var item in Model.Products)
            {
                <div class="col mb-5">
                    <div class="card h-100">
                        <!-- Clickable product image-->
                        <a href="@Url.Action("Productdetails", "Home", new { productId = item.ProductId })">
                            <img class="card-img-top" src="@item.ImgLink" alt="Product Image" />
                        </a>
                        <!-- Product details-->
                        <div class="card-body p-4">
                            <div class="text-center">
                                <!-- Clickable product name-->
                                <a href="@Url.Action("Productdetails", "Home", new { productId = item.ProductId })">
                                    <h5 class="fw-bolder">@item.Name</h5>
                                </a>
                                <!-- Product price-->
                                <p>$@item.Price</p>
                            </div>
                        </div>
                        <!-- Product actions-->
                        <div class="card-footer p-4 pt-0 border-top-0 bg-transparent">
                            <div class="text-center">
                                <button class="btn btn-outline-dark mt-auto add-to-cart-btn" data-item-id="@item.ProductId">Add to cart</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </section>
    <section class="py-5">
        <!-- Pagination -->
        <div class="d-flex justify-content-center">
            @if (Model.CurrentPage > 1)
            {
                <a class="btn btn-primary mr-2" href="@Url.Action("Index", new { page = Model.CurrentPage - 1 })">Previous</a>
            }
            @for (int pageIndex = 1; pageIndex <= Model.TotalPages; pageIndex++)
            {
                if (pageIndex == Model.CurrentPage)
                {
                    <span class="btn btn-secondary disabled">@pageIndex</span>
                }
                else
                {
                    <a class="btn btn-primary" href="@Url.Action("Index", new { page = pageIndex })">@pageIndex</a>
                }
            }
            @if (Model.CurrentPage < Model.TotalPages)
            {
                <a class="btn btn-primary ml-2" href="@Url.Action("Index", new { page = Model.CurrentPage + 1 })">Next</a>
            }
        </div>
    </section>
    
        <div class="container px-4 px-lg-5 my-5" style="background-color: #f8aed1;">
            <br/>
            <div class="text-center text-white">
                <h1 class="display-8 fw-bolder">About Aurora Brickwell</h1>
                <p class="lead fw-normal text-white-50 mb-0">Ever since Aurora was a little girl, she knew that she wanted to be a creative. Legos were her first toy that she fell in love with and she hopes you fall in love with Legos too.</p>
            </div>
            <br />
            
            <div class="text-center">
                <a class="btn btn-primary bg-white text-dark" asp-area="" asp-controller="Home" asp-action="Aboutus">About Brickwell Legos</a>
            </div>
            <br />
        </div>
    <!-- Footer-->

    <!-- Bootstrap core JS-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Core theme JS-->
    <script src="js/site.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.add-to-cart-btn').forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    const itemId = this.getAttribute('data-item-id');
                    fetch(`/Home/AddToCart?productID=${itemId}`, { method: 'POST' })
                        .then(response => response.json())
                        .then(data => {
                            document.getElementById('cart-quantity').innerText = data.cartItemCount;
                        })
                        .catch(error => console.error('Error adding item:', error));

                });
            });
        });
    </script>

</body>
</html>
